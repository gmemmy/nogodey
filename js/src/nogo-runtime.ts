/* Autogenerated runtime glue for Nogodey */
import {formatICU} from './icu-runtime.js'

type TranslationDict = Record<string, string>

const dict: TranslationDict = Object.create(null)

// Allow plugin/build step to inject translations at runtime if desired
export function __NOGO__setTranslations(map: TranslationDict): void {
  for (const [k, v] of Object.entries(map)) dict[k] = v
}

const ICU_PATTERN = /\{[^}]*?,\s*(plural|select)\s*,/i

export const __NOGO__ = (
  key: string,
  vars: Record<string, string | number | boolean> = {}
): string => {
  const msg = dict[key] ?? key
  return ICU_PATTERN.test(msg) ? formatICU(msg, vars) : msg
}

// Expose globally so transformed JSX can call without import
// biome-ignore lint/suspicious/noExplicitAny: attaching to global object for convenience
;(globalThis as any).__NOGO__ = __NOGO__

export default __NOGO__
